//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.0.
// 
#pragma warning disable 1591

namespace SOAPConsole.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="stationlightportSoapBinding", Namespace="http://unistation.ru/wsdl")]
    public partial class stationlightport : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBusStopsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFreeSeatsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTicketReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationTripsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServicePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTripsSegmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPossibilityOfOrderingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public stationlightport() {
            this.Url = global::SOAPConsole.Properties.Settings.Default.SOAPConsole_WebReference_stationlightport;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBusStopsCompletedEventHandler GetBusStopsCompleted;
        
        /// <remarks/>
        public event GetTripIdCompletedEventHandler GetTripIdCompleted;
        
        /// <remarks/>
        public event GetTripsCompletedEventHandler GetTripsCompleted;
        
        /// <remarks/>
        public event GetTicketPriceCompletedEventHandler GetTicketPriceCompleted;
        
        /// <remarks/>
        public event GetOrderCompletedEventHandler GetOrderCompleted;
        
        /// <remarks/>
        public event DeactivateOrderCompletedEventHandler DeactivateOrderCompleted;
        
        /// <remarks/>
        public event CheckOrderCompletedEventHandler CheckOrderCompleted;
        
        /// <remarks/>
        public event PaymentCompletedEventHandler PaymentCompleted;
        
        /// <remarks/>
        public event GetTripInfoCompletedEventHandler GetTripInfoCompleted;
        
        /// <remarks/>
        public event GetFreeSeatsCountCompletedEventHandler GetFreeSeatsCountCompleted;
        
        /// <remarks/>
        public event CheckTicketReturnCompletedEventHandler CheckTicketReturnCompleted;
        
        /// <remarks/>
        public event ReturnTicketCompletedEventHandler ReturnTicketCompleted;
        
        /// <remarks/>
        public event GetSalesReportCompletedEventHandler GetSalesReportCompleted;
        
        /// <remarks/>
        public event GetScheduleCompletedEventHandler GetScheduleCompleted;
        
        /// <remarks/>
        public event GetDiscountInfoCompletedEventHandler GetDiscountInfoCompleted;
        
        /// <remarks/>
        public event GetStationTripsCompletedEventHandler GetStationTripsCompleted;
        
        /// <remarks/>
        public event ServicePaymentCompletedEventHandler ServicePaymentCompleted;
        
        /// <remarks/>
        public event GetSeatsSchemeCompletedEventHandler GetSeatsSchemeCompleted;
        
        /// <remarks/>
        public event GetAllTripsSegmentsCompletedEventHandler GetAllTripsSegmentsCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event ClientMessageCompletedEventHandler ClientMessageCompleted;
        
        /// <remarks/>
        public event CancelPaymentCompletedEventHandler CancelPaymentCompleted;
        
        /// <remarks/>
        public event GetPrivilegesCompletedEventHandler GetPrivilegesCompleted;
        
        /// <remarks/>
        public event CheckPossibilityOfOrderingCompletedEventHandler CheckPossibilityOfOrderingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetBusStops", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetBusStops() {
            object[] results = this.Invoke("GetBusStops", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusStopsAsync() {
            this.GetBusStopsAsync(null);
        }
        
        /// <remarks/>
        public void GetBusStopsAsync(object userState) {
            if ((this.GetBusStopsOperationCompleted == null)) {
                this.GetBusStopsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusStopsOperationCompleted);
            }
            this.InvokeAsync("GetBusStops", new object[0], this.GetBusStopsOperationCompleted, userState);
        }
        
        private void OnGetBusStopsOperationCompleted(object arg) {
            if ((this.GetBusStopsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusStopsCompleted(this, new GetBusStopsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetTripId", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetTripId(string DeparturePoint, string DestinationPoint, string TripDate, string TripTime) {
            object[] results = this.Invoke("GetTripId", new object[] {
                        DeparturePoint,
                        DestinationPoint,
                        TripDate,
                        TripTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripIdAsync(string DeparturePoint, string DestinationPoint, string TripDate, string TripTime) {
            this.GetTripIdAsync(DeparturePoint, DestinationPoint, TripDate, TripTime, null);
        }
        
        /// <remarks/>
        public void GetTripIdAsync(string DeparturePoint, string DestinationPoint, string TripDate, string TripTime, object userState) {
            if ((this.GetTripIdOperationCompleted == null)) {
                this.GetTripIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripIdOperationCompleted);
            }
            this.InvokeAsync("GetTripId", new object[] {
                        DeparturePoint,
                        DestinationPoint,
                        TripDate,
                        TripTime}, this.GetTripIdOperationCompleted, userState);
        }
        
        private void OnGetTripIdOperationCompleted(object arg) {
            if ((this.GetTripIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripIdCompleted(this, new GetTripIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetTrips", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetTrips(string DeparturePoint, string DestinationPoint, string TripDate) {
            object[] results = this.Invoke("GetTrips", new object[] {
                        DeparturePoint,
                        DestinationPoint,
                        TripDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripsAsync(string DeparturePoint, string DestinationPoint, string TripDate) {
            this.GetTripsAsync(DeparturePoint, DestinationPoint, TripDate, null);
        }
        
        /// <remarks/>
        public void GetTripsAsync(string DeparturePoint, string DestinationPoint, string TripDate, object userState) {
            if ((this.GetTripsOperationCompleted == null)) {
                this.GetTripsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripsOperationCompleted);
            }
            this.InvokeAsync("GetTrips", new object[] {
                        DeparturePoint,
                        DestinationPoint,
                        TripDate}, this.GetTripsOperationCompleted, userState);
        }
        
        private void OnGetTripsOperationCompleted(object arg) {
            if ((this.GetTripsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripsCompleted(this, new GetTripsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetTicketPrice", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetTicketPrice(string TripId, string DeparturePoint, string DestinationPoint, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TicketKind) {
            object[] results = this.Invoke("GetTicketPrice", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketPriceAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind) {
            this.GetTicketPriceAsync(TripId, DeparturePoint, DestinationPoint, TicketKind, null);
        }
        
        /// <remarks/>
        public void GetTicketPriceAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind, object userState) {
            if ((this.GetTicketPriceOperationCompleted == null)) {
                this.GetTicketPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketPriceOperationCompleted);
            }
            this.InvokeAsync("GetTicketPrice", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind}, this.GetTicketPriceOperationCompleted, userState);
        }
        
        private void OnGetTicketPriceOperationCompleted(object arg) {
            if ((this.GetTicketPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketPriceCompleted(this, new GetTicketPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetOrder", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetOrder(string TicketList) {
            object[] results = this.Invoke("GetOrder", new object[] {
                        TicketList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderAsync(string TicketList) {
            this.GetOrderAsync(TicketList, null);
        }
        
        /// <remarks/>
        public void GetOrderAsync(string TicketList, object userState) {
            if ((this.GetOrderOperationCompleted == null)) {
                this.GetOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderOperationCompleted);
            }
            this.InvokeAsync("GetOrder", new object[] {
                        TicketList}, this.GetOrderOperationCompleted, userState);
        }
        
        private void OnGetOrderOperationCompleted(object arg) {
            if ((this.GetOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:DeactivateOrder", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string DeactivateOrder(string OrderId) {
            object[] results = this.Invoke("DeactivateOrder", new object[] {
                        OrderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeactivateOrderAsync(string OrderId) {
            this.DeactivateOrderAsync(OrderId, null);
        }
        
        /// <remarks/>
        public void DeactivateOrderAsync(string OrderId, object userState) {
            if ((this.DeactivateOrderOperationCompleted == null)) {
                this.DeactivateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivateOrderOperationCompleted);
            }
            this.InvokeAsync("DeactivateOrder", new object[] {
                        OrderId}, this.DeactivateOrderOperationCompleted, userState);
        }
        
        private void OnDeactivateOrderOperationCompleted(object arg) {
            if ((this.DeactivateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivateOrderCompleted(this, new DeactivateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:CheckOrder", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string CheckOrder(string AccountId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sum) {
            object[] results = this.Invoke("CheckOrder", new object[] {
                        AccountId,
                        sum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOrderAsync(string AccountId, string sum) {
            this.CheckOrderAsync(AccountId, sum, null);
        }
        
        /// <remarks/>
        public void CheckOrderAsync(string AccountId, string sum, object userState) {
            if ((this.CheckOrderOperationCompleted == null)) {
                this.CheckOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOrderOperationCompleted);
            }
            this.InvokeAsync("CheckOrder", new object[] {
                        AccountId,
                        sum}, this.CheckOrderOperationCompleted, userState);
        }
        
        private void OnCheckOrderOperationCompleted(object arg) {
            if ((this.CheckOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOrderCompleted(this, new CheckOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:Payment", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string Payment(string AccountId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transactionid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string paymentmethod) {
            object[] results = this.Invoke("Payment", new object[] {
                        AccountId,
                        sum,
                        checkid,
                        transactionid,
                        sessionid,
                        paymentmethod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PaymentAsync(string AccountId, string sum, string checkid, string transactionid, string sessionid, string paymentmethod) {
            this.PaymentAsync(AccountId, sum, checkid, transactionid, sessionid, paymentmethod, null);
        }
        
        /// <remarks/>
        public void PaymentAsync(string AccountId, string sum, string checkid, string transactionid, string sessionid, string paymentmethod, object userState) {
            if ((this.PaymentOperationCompleted == null)) {
                this.PaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentOperationCompleted);
            }
            this.InvokeAsync("Payment", new object[] {
                        AccountId,
                        sum,
                        checkid,
                        transactionid,
                        sessionid,
                        paymentmethod}, this.PaymentOperationCompleted, userState);
        }
        
        private void OnPaymentOperationCompleted(object arg) {
            if ((this.PaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentCompleted(this, new PaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetTripInfo", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetTripInfo(string TripId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StationId) {
            object[] results = this.Invoke("GetTripInfo", new object[] {
                        TripId,
                        StationId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripInfoAsync(string TripId, string StationId) {
            this.GetTripInfoAsync(TripId, StationId, null);
        }
        
        /// <remarks/>
        public void GetTripInfoAsync(string TripId, string StationId, object userState) {
            if ((this.GetTripInfoOperationCompleted == null)) {
                this.GetTripInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripInfoOperationCompleted);
            }
            this.InvokeAsync("GetTripInfo", new object[] {
                        TripId,
                        StationId}, this.GetTripInfoOperationCompleted, userState);
        }
        
        private void OnGetTripInfoOperationCompleted(object arg) {
            if ((this.GetTripInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripInfoCompleted(this, new GetTripInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetFreeSeatsCount", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetFreeSeatsCount(string TripId, string DeparturePoint, string DestinationPoint, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TicketKind) {
            object[] results = this.Invoke("GetFreeSeatsCount", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFreeSeatsCountAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind) {
            this.GetFreeSeatsCountAsync(TripId, DeparturePoint, DestinationPoint, TicketKind, null);
        }
        
        /// <remarks/>
        public void GetFreeSeatsCountAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind, object userState) {
            if ((this.GetFreeSeatsCountOperationCompleted == null)) {
                this.GetFreeSeatsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFreeSeatsCountOperationCompleted);
            }
            this.InvokeAsync("GetFreeSeatsCount", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind}, this.GetFreeSeatsCountOperationCompleted, userState);
        }
        
        private void OnGetFreeSeatsCountOperationCompleted(object arg) {
            if ((this.GetFreeSeatsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFreeSeatsCountCompleted(this, new GetFreeSeatsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:CheckTicketReturn", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string CheckTicketReturn(string TicketId) {
            object[] results = this.Invoke("CheckTicketReturn", new object[] {
                        TicketId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTicketReturnAsync(string TicketId) {
            this.CheckTicketReturnAsync(TicketId, null);
        }
        
        /// <remarks/>
        public void CheckTicketReturnAsync(string TicketId, object userState) {
            if ((this.CheckTicketReturnOperationCompleted == null)) {
                this.CheckTicketReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTicketReturnOperationCompleted);
            }
            this.InvokeAsync("CheckTicketReturn", new object[] {
                        TicketId}, this.CheckTicketReturnOperationCompleted, userState);
        }
        
        private void OnCheckTicketReturnOperationCompleted(object arg) {
            if ((this.CheckTicketReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTicketReturnCompleted(this, new CheckTicketReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:ReturnTicket", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ReturnTicket(string ReturnId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkid) {
            object[] results = this.Invoke("ReturnTicket", new object[] {
                        ReturnId,
                        checkid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTicketAsync(string ReturnId, string checkid) {
            this.ReturnTicketAsync(ReturnId, checkid, null);
        }
        
        /// <remarks/>
        public void ReturnTicketAsync(string ReturnId, string checkid, object userState) {
            if ((this.ReturnTicketOperationCompleted == null)) {
                this.ReturnTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTicketOperationCompleted);
            }
            this.InvokeAsync("ReturnTicket", new object[] {
                        ReturnId,
                        checkid}, this.ReturnTicketOperationCompleted, userState);
        }
        
        private void OnReturnTicketOperationCompleted(object arg) {
            if ((this.ReturnTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTicketCompleted(this, new ReturnTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetSalesReport", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetSalesReport(string StartDate, string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ReportType) {
            object[] results = this.Invoke("GetSalesReport", new object[] {
                        StartDate,
                        EndDate,
                        ReportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesReportAsync(string StartDate, string EndDate, string ReportType) {
            this.GetSalesReportAsync(StartDate, EndDate, ReportType, null);
        }
        
        /// <remarks/>
        public void GetSalesReportAsync(string StartDate, string EndDate, string ReportType, object userState) {
            if ((this.GetSalesReportOperationCompleted == null)) {
                this.GetSalesReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesReportOperationCompleted);
            }
            this.InvokeAsync("GetSalesReport", new object[] {
                        StartDate,
                        EndDate,
                        ReportType}, this.GetSalesReportOperationCompleted, userState);
        }
        
        private void OnGetSalesReportOperationCompleted(object arg) {
            if ((this.GetSalesReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesReportCompleted(this, new GetSalesReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetSchedule", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetSchedule(string DeparturePoint, string DestinationPoint) {
            object[] results = this.Invoke("GetSchedule", new object[] {
                        DeparturePoint,
                        DestinationPoint});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleAsync(string DeparturePoint, string DestinationPoint) {
            this.GetScheduleAsync(DeparturePoint, DestinationPoint, null);
        }
        
        /// <remarks/>
        public void GetScheduleAsync(string DeparturePoint, string DestinationPoint, object userState) {
            if ((this.GetScheduleOperationCompleted == null)) {
                this.GetScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleOperationCompleted);
            }
            this.InvokeAsync("GetSchedule", new object[] {
                        DeparturePoint,
                        DestinationPoint}, this.GetScheduleOperationCompleted, userState);
        }
        
        private void OnGetScheduleOperationCompleted(object arg) {
            if ((this.GetScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleCompleted(this, new GetScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetDiscountInfo", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetDiscountInfo(string discountcode) {
            object[] results = this.Invoke("GetDiscountInfo", new object[] {
                        discountcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscountInfoAsync(string discountcode) {
            this.GetDiscountInfoAsync(discountcode, null);
        }
        
        /// <remarks/>
        public void GetDiscountInfoAsync(string discountcode, object userState) {
            if ((this.GetDiscountInfoOperationCompleted == null)) {
                this.GetDiscountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscountInfoOperationCompleted);
            }
            this.InvokeAsync("GetDiscountInfo", new object[] {
                        discountcode}, this.GetDiscountInfoOperationCompleted, userState);
        }
        
        private void OnGetDiscountInfoOperationCompleted(object arg) {
            if ((this.GetDiscountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscountInfoCompleted(this, new GetDiscountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetStationTrips", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetStationTrips(string StationId, string StartTimeShift, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndTimeShift, string MaxTripsCount, string MaxNotActualCount) {
            object[] results = this.Invoke("GetStationTrips", new object[] {
                        StationId,
                        StartTimeShift,
                        EndTimeShift,
                        MaxTripsCount,
                        MaxNotActualCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationTripsAsync(string StationId, string StartTimeShift, string EndTimeShift, string MaxTripsCount, string MaxNotActualCount) {
            this.GetStationTripsAsync(StationId, StartTimeShift, EndTimeShift, MaxTripsCount, MaxNotActualCount, null);
        }
        
        /// <remarks/>
        public void GetStationTripsAsync(string StationId, string StartTimeShift, string EndTimeShift, string MaxTripsCount, string MaxNotActualCount, object userState) {
            if ((this.GetStationTripsOperationCompleted == null)) {
                this.GetStationTripsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationTripsOperationCompleted);
            }
            this.InvokeAsync("GetStationTrips", new object[] {
                        StationId,
                        StartTimeShift,
                        EndTimeShift,
                        MaxTripsCount,
                        MaxNotActualCount}, this.GetStationTripsOperationCompleted, userState);
        }
        
        private void OnGetStationTripsOperationCompleted(object arg) {
            if ((this.GetStationTripsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationTripsCompleted(this, new GetStationTripsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:ServicePayment", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ServicePayment(string ServiceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kkmid) {
            object[] results = this.Invoke("ServicePayment", new object[] {
                        ServiceId,
                        sum,
                        checkid,
                        kkmid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServicePaymentAsync(string ServiceId, string sum, string checkid, string kkmid) {
            this.ServicePaymentAsync(ServiceId, sum, checkid, kkmid, null);
        }
        
        /// <remarks/>
        public void ServicePaymentAsync(string ServiceId, string sum, string checkid, string kkmid, object userState) {
            if ((this.ServicePaymentOperationCompleted == null)) {
                this.ServicePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServicePaymentOperationCompleted);
            }
            this.InvokeAsync("ServicePayment", new object[] {
                        ServiceId,
                        sum,
                        checkid,
                        kkmid}, this.ServicePaymentOperationCompleted, userState);
        }
        
        private void OnServicePaymentOperationCompleted(object arg) {
            if ((this.ServicePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServicePaymentCompleted(this, new ServicePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetSeatsScheme", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetSeatsScheme(string TripId, string DeparturePoint, string DestinationPoint, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TicketKind) {
            object[] results = this.Invoke("GetSeatsScheme", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsSchemeAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind) {
            this.GetSeatsSchemeAsync(TripId, DeparturePoint, DestinationPoint, TicketKind, null);
        }
        
        /// <remarks/>
        public void GetSeatsSchemeAsync(string TripId, string DeparturePoint, string DestinationPoint, string TicketKind, object userState) {
            if ((this.GetSeatsSchemeOperationCompleted == null)) {
                this.GetSeatsSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsSchemeOperationCompleted);
            }
            this.InvokeAsync("GetSeatsScheme", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        TicketKind}, this.GetSeatsSchemeOperationCompleted, userState);
        }
        
        private void OnGetSeatsSchemeOperationCompleted(object arg) {
            if ((this.GetSeatsSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsSchemeCompleted(this, new GetSeatsSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetAllTripsSegments", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetAllTripsSegments() {
            object[] results = this.Invoke("GetAllTripsSegments", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTripsSegmentsAsync() {
            this.GetAllTripsSegmentsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTripsSegmentsAsync(object userState) {
            if ((this.GetAllTripsSegmentsOperationCompleted == null)) {
                this.GetAllTripsSegmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTripsSegmentsOperationCompleted);
            }
            this.InvokeAsync("GetAllTripsSegments", new object[0], this.GetAllTripsSegmentsOperationCompleted, userState);
        }
        
        private void OnGetAllTripsSegmentsOperationCompleted(object arg) {
            if ((this.GetAllTripsSegmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTripsSegmentsCompleted(this, new GetAllTripsSegmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:Ping", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:ClientMessage", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string ClientMessage(string MessageText) {
            object[] results = this.Invoke("ClientMessage", new object[] {
                        MessageText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientMessageAsync(string MessageText) {
            this.ClientMessageAsync(MessageText, null);
        }
        
        /// <remarks/>
        public void ClientMessageAsync(string MessageText, object userState) {
            if ((this.ClientMessageOperationCompleted == null)) {
                this.ClientMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientMessageOperationCompleted);
            }
            this.InvokeAsync("ClientMessage", new object[] {
                        MessageText}, this.ClientMessageOperationCompleted, userState);
        }
        
        private void OnClientMessageOperationCompleted(object arg) {
            if ((this.ClientMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientMessageCompleted(this, new ClientMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:CancelPayment", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string CancelPayment(string AccountId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tickets) {
            object[] results = this.Invoke("CancelPayment", new object[] {
                        AccountId,
                        Tickets});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPaymentAsync(string AccountId, string Tickets) {
            this.CancelPaymentAsync(AccountId, Tickets, null);
        }
        
        /// <remarks/>
        public void CancelPaymentAsync(string AccountId, string Tickets, object userState) {
            if ((this.CancelPaymentOperationCompleted == null)) {
                this.CancelPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPaymentOperationCompleted);
            }
            this.InvokeAsync("CancelPayment", new object[] {
                        AccountId,
                        Tickets}, this.CancelPaymentOperationCompleted, userState);
        }
        
        private void OnCancelPaymentOperationCompleted(object arg) {
            if ((this.CancelPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPaymentCompleted(this, new CancelPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:GetPrivileges", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string GetPrivileges(string TripId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DeparturePoint, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DestinationPoint) {
            object[] results = this.Invoke("GetPrivileges", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string TripId, string DeparturePoint, string DestinationPoint) {
            this.GetPrivilegesAsync(TripId, DeparturePoint, DestinationPoint, null);
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string TripId, string DeparturePoint, string DestinationPoint, object userState) {
            if ((this.GetPrivilegesOperationCompleted == null)) {
                this.GetPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetPrivileges", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint}, this.GetPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetPrivilegesOperationCompleted(object arg) {
            if ((this.GetPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivilegesCompleted(this, new GetPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unistation.ru/wsdl#stationlightport:CheckPossibilityOfOrdering", RequestNamespace="http://unistation.ru/wsdl", ResponseNamespace="http://unistation.ru/wsdl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string CheckPossibilityOfOrdering(string TripId, string DeparturePoint, string DestinationPoint, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string paymentmethod) {
            object[] results = this.Invoke("CheckPossibilityOfOrdering", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        paymentmethod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPossibilityOfOrderingAsync(string TripId, string DeparturePoint, string DestinationPoint, string paymentmethod) {
            this.CheckPossibilityOfOrderingAsync(TripId, DeparturePoint, DestinationPoint, paymentmethod, null);
        }
        
        /// <remarks/>
        public void CheckPossibilityOfOrderingAsync(string TripId, string DeparturePoint, string DestinationPoint, string paymentmethod, object userState) {
            if ((this.CheckPossibilityOfOrderingOperationCompleted == null)) {
                this.CheckPossibilityOfOrderingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPossibilityOfOrderingOperationCompleted);
            }
            this.InvokeAsync("CheckPossibilityOfOrdering", new object[] {
                        TripId,
                        DeparturePoint,
                        DestinationPoint,
                        paymentmethod}, this.CheckPossibilityOfOrderingOperationCompleted, userState);
        }
        
        private void OnCheckPossibilityOfOrderingOperationCompleted(object arg) {
            if ((this.CheckPossibilityOfOrderingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPossibilityOfOrderingCompleted(this, new CheckPossibilityOfOrderingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetBusStopsCompletedEventHandler(object sender, GetBusStopsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusStopsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusStopsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTripIdCompletedEventHandler(object sender, GetTripIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTripsCompletedEventHandler(object sender, GetTripsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTicketPriceCompletedEventHandler(object sender, GetTicketPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOrderCompletedEventHandler(object sender, GetOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeactivateOrderCompletedEventHandler(object sender, DeactivateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeactivateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeactivateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckOrderCompletedEventHandler(object sender, CheckOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PaymentCompletedEventHandler(object sender, PaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTripInfoCompletedEventHandler(object sender, GetTripInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetFreeSeatsCountCompletedEventHandler(object sender, GetFreeSeatsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFreeSeatsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFreeSeatsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckTicketReturnCompletedEventHandler(object sender, CheckTicketReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTicketReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTicketReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReturnTicketCompletedEventHandler(object sender, ReturnTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSalesReportCompletedEventHandler(object sender, GetSalesReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetScheduleCompletedEventHandler(object sender, GetScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDiscountInfoCompletedEventHandler(object sender, GetDiscountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetStationTripsCompletedEventHandler(object sender, GetStationTripsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ServicePaymentCompletedEventHandler(object sender, ServicePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServicePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServicePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSeatsSchemeCompletedEventHandler(object sender, GetSeatsSchemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAllTripsSegmentsCompletedEventHandler(object sender, GetAllTripsSegmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTripsSegmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTripsSegmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ClientMessageCompletedEventHandler(object sender, ClientMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CancelPaymentCompletedEventHandler(object sender, CancelPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrivilegesCompletedEventHandler(object sender, GetPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckPossibilityOfOrderingCompletedEventHandler(object sender, CheckPossibilityOfOrderingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPossibilityOfOrderingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPossibilityOfOrderingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591